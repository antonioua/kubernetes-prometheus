apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: prometheus-core
  namespace: monitoring
data:
  prometheus.yaml: |
    global:
      scrape_interval: 10s
      scrape_timeout: 10s
      evaluation_interval: 10s
    rule_files:
      - "/etc/prometheus-rules/*.rules.yaml"

    # This snippet instructs Prometheus to search for Kubernetes pods, in the default namespace, with the label name: alertmanager and with a non-empty port.
    alerting:
      alertmanagers:
      - kubernetes_sd_configs:
          - role: pod
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_name]
          regex: alertmanager
          action: keep
        - source_labels: [__meta_kubernetes_namespace]
          regex: monitoring
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex:
          action: drop

    scrape_configs:
    # Example scrape config for service endpoints.
    #
    # The relabeling allows the actual service scrape endpoint to be configured
    # for all or only some endpoints.

    - job_name: 'kubernetes-service-endpoints'

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      # Example relabel to scrape only endpoints that have
      # "example.io/should_be_scraped = true" annotation.
      #  - source_labels: [__meta_kubernetes_service_annotation_example_io_should_be_scraped]
      #    action: keep
      #    regex: true
      #
      # Example relabel to customize metric path based on endpoints
      # "example.io/metric_path = <metric path>" annotation.
      #  - source_labels: [__meta_kubernetes_service_annotation_example_io_metric_path]
      #    action: replace
      #    target_label: __metrics_path__
      #    regex: (.+)
      #
      # Example relabel to scrape only single, desired port for the service based
      # on endpoints "example.io/scrape_port = <port>" annotation.
      #  - source_labels: [__address__, __meta_kubernetes_service_annotation_example_io_scrape_port]
      #    action: replace
      #    regex: ([^:]+)(?::\d+)?;(\d+)
      #    replacement: $1:$2
      #    target_label: __address__
      #
      # Example relabel to configure scrape scheme for all service scrape targets
      # based on endpoints "example.io/scrape_scheme = <scheme>" annotation.
      #  - source_labels: [__meta_kubernetes_service_annotation_example_io_scrape_scheme]
      #    action: replace
      #    target_label: __scheme__
      #    regex: (https?)
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

    - job_name: 'kubernetes-apiservers'

      kubernetes_sd_configs:
      - role: endpoints

      # Default to scraping over https. If required, just disable this or change to
      # `http`.
      scheme: https

      # This TLS & bearer token file config is used to connect to the actual scrape
      # endpoints for cluster components. This is separate to discovery auth
      # configuration because discovery & scraping are two separate concerns in
      # Prometheus. The discovery auth config is automatic if Prometheus runs inside
      # the cluster. Otherwise, more config options have to be provided within the
      # <kubernetes_sd_config>.
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        # If your node certificates are self-signed or use a different CA to the
        # master CA, then disable certificate verification below. Note that
        # certificate verification is an integral part of a secure infrastructure
        # so this should only be disabled in a controlled environment. You can
        # disable certificate verification by uncommenting the line below.
        #
        # insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      # Keep only the default/kubernetes service endpoints for the https port. This
      # will add targets for each API server which Kubernetes adds an endpoint to
      # the default/kubernetes service.
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

    # Scrape config for nodes (kubelet).
    #
    # Rather than connecting directly to the node, the scrape is proxied though the
    # Kubernetes apiserver.  This means it will work if Prometheus is running out of
    # cluster, or can't connect to nodes for some other reason (e.g. because of
    # firewalling).


    ###- job_name: 'kubernetes-nodes'
    ###
    ###  # Default to scraping over https. If required, just disable this or change to
    ###  # `http`.
    ###  scheme: https
    ###
    ###  # This TLS & bearer token file config is used to connect to the actual scrape
    ###  # endpoints for cluster components. This is separate to discovery auth
    ###  # configuration because discovery & scraping are two separate concerns in
    ###  # Prometheus. The discovery auth config is automatic if Prometheus runs inside
    ###  # the cluster. Otherwise, more config options have to be provided within the
    ###  # <kubernetes_sd_config>.
    ###  tls_config:
    ###    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    ###  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    ###
    ###  kubernetes_sd_configs:
    ###  - role: node
    ###
    ###  relabel_configs:
    ###  - action: labelmap
    ###    regex: __meta_kubernetes_node_label_(.+)
    ###  - target_label: __address__
    ###    replacement: kube-apiserver:6443
    ###  - source_labels: [__meta_kubernetes_node_name]
    ###    regex: (.+)
    ###    target_label: __metrics_path__
    ###    replacement: /api/v1/nodes/${1}/proxy/metrics

    - job_name: 'cadvisor'

      # Override the global default and scrape targets from this job every 5 seconds.
      scrape_interval: 5s

      dns_sd_configs:
      - names:
        - 'cadvisor'
        type: 'A'
        port: 8080

      # static_configs:
      # - targets: ['cadvisor:8080']


    - job_name: 'node-exporter'

      # Override the global default and scrape targets from this job every 5 seconds.
      scrape_interval: 5s

      dns_sd_configs:
      - names:
        - 'node-exporter'
        type: 'A'
        port: 9100
